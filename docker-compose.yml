version: '3.8'

services:
  inventory-service:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/inventory-service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_APPLICATION_NAME: inventory-service
      SERVER_PORT: 8080
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - backend

  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    restart: on-failure
    ports:
      - "9308:9308"
    environment:
      KAFKA_SERVER: kafka:9092
    depends_on:
      - kafka
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./src/main/resources/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - inventory-service
    networks:
      - backend

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    name: backend
